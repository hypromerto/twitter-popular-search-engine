{"ast":null,"code":"var _jsxFileName = \"/home/bert/project/front_end/src/components/frontEnd.jsx\";\nimport React, { Component } from \"react\";\nimport Container from 'react-bootstrap/Container';\nimport Row from 'react-bootstrap/Row';\nimport Col from 'react-bootstrap/Col';\nimport \"./tweet_list.css\";\nimport \"./top.css\";\nimport \"./button.css\";\nimport \"./header.css\";\nimport \"./input.css\";\n\nclass FrontEnd extends Component {\n  constructor(props) {\n    super(props);\n\n    this.getResults = e => {\n      const searchText = this.state.searchText;\n      fetch(\"http://localhost:5000/search\", {\n        method: \"POST\",\n        body: JSON.stringify({\n          'search_parameter': searchText\n        })\n      }).then(results => results.json()).then(results => {\n        console.log(results.texts);\n        console.log(results.hashtags);\n        let tweets = Array.isArray(results.texts) ? results.texts : JSON.parse(results.texts);\n        let hashtags = results.hashtags;\n        this.setState({\n          tweets\n        });\n        this.setState({\n          hashtags\n        });\n      }).catch(error => console.error('Error:', error));\n    };\n\n    this.handleChange = e => {\n      const _e$target = e.target,\n            name = _e$target.name,\n            value = _e$target.value;\n      this.setState({\n        [name]: value\n      });\n    };\n\n    this.state = {\n      tweets: [],\n      hashtags: {},\n      searchText: \"\"\n    };\n  }\n\n  isEmpty(obj) {\n    for (var key in obj) {\n      if (obj.hasOwnProperty(key)) return false;\n    }\n\n    return true;\n  }\n\n  render() {\n    if (this.state.tweets.length) {\n      var renderTweets = this.state.tweets.map((resultDetail, index) => {\n        return React.createElement(\"li\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 64\n          },\n          __self: this\n        }, resultDetail);\n      });\n    }\n\n    if (!this.isEmpty(this.state.hashtags)) {\n      var renderHashtags = Object.keys(this.state.hashtags).map((key, index) => {\n        return React.createElement(\"div\", {\n          style: {\n            \"backgroundColor\": \"#000000\"\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 70\n          },\n          __self: this\n        }, React.createElement(Col, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 71\n          },\n          __self: this\n        }, React.createElement(\"h1\", {\n          style: {\n            \"color\": \"#F38F8E\"\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 72\n          },\n          __self: this\n        }, this.state.hashtags[key]), React.createElement(\"p\", {\n          style: {\n            \"color\": \"#FFFFFF\"\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 73\n          },\n          __self: this\n        }, \" \", key)));\n      });\n    }\n\n    return React.createElement(\"div\", {\n      className: \"style\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"header\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84\n      },\n      __self: this\n    }, React.createElement(\"h1\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85\n      },\n      __self: this\n    }, \"Twitter Popular Tweets Search Engine\")), React.createElement(Container, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 88\n      },\n      __self: this\n    }, React.createElement(Row, {\n      style: {\n        \"marginTop\": 10\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 89\n      },\n      __self: this\n    }, React.createElement(Col, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 90\n      },\n      __self: this\n    }, React.createElement(\"input\", {\n      className: \"input\",\n      type: \"text\",\n      name: \"searchText\",\n      onChange: this.handleChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 91\n      },\n      __self: this\n    }), React.createElement(\"button\", {\n      className: \"button\",\n      onClick: this.getResults,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 92\n      },\n      __self: this\n    }, React.createElement(\"i\", {\n      className: \"fab fa-twitter\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 92\n      },\n      __self: this\n    })))), React.createElement(Row, {\n      style: {\n        \"marginTop\": 10\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 95\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"tweet_list\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 96\n      },\n      __self: this\n    }, React.createElement(\"ul\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 97\n      },\n      __self: this\n    }, renderTweets))), React.createElement(Row, {\n      style: {\n        \"marginTop\": 10\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 100\n      },\n      __self: this\n    }, renderHashtags, React.createElement(\"h1\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 103\n      },\n      __self: this\n    }, \" \"))));\n  }\n\n}\n\nexport default FrontEnd;","map":{"version":3,"sources":["/home/bert/project/front_end/src/components/frontEnd.jsx"],"names":["React","Component","Container","Row","Col","FrontEnd","constructor","props","getResults","e","searchText","state","fetch","method","body","JSON","stringify","then","results","json","console","log","texts","hashtags","tweets","Array","isArray","parse","setState","catch","error","handleChange","target","name","value","isEmpty","obj","key","hasOwnProperty","render","length","renderTweets","map","resultDetail","index","renderHashtags","Object","keys"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\"\nimport Container from 'react-bootstrap/Container'\nimport Row from 'react-bootstrap/Row'\nimport Col from 'react-bootstrap/Col'\nimport \"./tweet_list.css\"\nimport \"./top.css\"\nimport \"./button.css\"\nimport \"./header.css\"\nimport \"./input.css\"\n\nclass FrontEnd extends Component {\n  constructor(props) {\n    super(props)\n    this.state = {\n      tweets: [],\n      hashtags: {},\n      searchText: \"\"\n    }\n  }\n\n  getResults = e => {\n    const { searchText } = this.state\n    fetch(\"http://localhost:5000/search\", {\n      method: \"POST\",\n      body: JSON.stringify({ 'search_parameter': searchText })\n    })\n      .then(results => results.json())\n      .then(results => {\n        console.log(results.texts)\n        console.log(results.hashtags)\n        let tweets = Array.isArray(results.texts)\n          ? results.texts\n          : JSON.parse(results.texts);\n        let hashtags = results.hashtags;\n        this.setState({\n          tweets\n        })\n        this.setState({\n          hashtags\n        })\n      })\n      .catch(error => console.error('Error:', error));\n\n  }\n\n  handleChange = e => {\n    const { name, value } = e.target\n    this.setState({\n      [name]: value\n    })\n  }\n\n  isEmpty(obj) {\n    for (var key in obj) {\n      if (obj.hasOwnProperty(key))\n        return false;\n    }\n    return true;\n  }\n  render() {\n\n    if (this.state.tweets.length) {\n      var renderTweets = this.state.tweets.map((resultDetail, index) => {\n        return <li>{resultDetail}</li>\n      })\n    }\n\n    if (!this.isEmpty(this.state.hashtags)) {\n      var renderHashtags = Object.keys(this.state.hashtags).map((key, index) => {\n        return (<div style={{ \"backgroundColor\": \"#000000\" }} >\n          <Col>\n            <h1 style={{ \"color\": \"#F38F8E\" }}>{this.state.hashtags[key]}</h1>\n            <p style={{ \"color\": \"#FFFFFF\" }}> {key}</p>\n          </Col>\n\n        </div >\n        )\n      })\n\n    }\n\n    return (\n      <div className=\"style\" >\n        <div className=\"header\">\n          <h1>Twitter Popular Tweets Search Engine</h1>\n        </div>\n\n        <Container>\n          <Row style={{ \"marginTop\": 10 }}>\n            <Col>\n              <input className=\"input\" type=\"text\" name=\"searchText\" onChange={this.handleChange} />\n              <button className=\"button\" onClick={this.getResults}><i className=\"fab fa-twitter\"></i></button>\n            </Col>\n          </Row>\n          <Row style={{ \"marginTop\": 10 }}>\n            <div className=\"tweet_list\">\n              <ul>{renderTweets}</ul>\n            </div>\n          </Row>\n          <Row style={{ \"marginTop\": 10 }}>\n\n            {renderHashtags}\n            <h1> </h1>\n\n          </Row>\n\n        </Container>\n      </div>\n    )\n  }\n}\n\nexport default FrontEnd\n"]},"metadata":{},"sourceType":"module"}